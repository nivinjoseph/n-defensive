{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import \"@nivinjoseph/n-ext\";\nimport  \n{\n    ArgumentException,\n    ArgumentNullException,\n    InvalidArgumentException,\n} from \"@nivinjoseph/n-exception\";\n\nexport interface Ensurer<T>\n{\n    ensureHasValue(): Ensurer<T>;\n    ensureIsString(): Ensurer<T>;\n    ensureIsNumber(): Ensurer<T>;\n    ensureIsBoolean(): Ensurer<T>;\n    ensureIsObject(): Ensurer<T>;\n    ensureIsFunction(): Ensurer<T>;\n    ensureIsArray(): Ensurer<T>;\n    ensureIsType(type: Function): Ensurer<T>;\n    ensureHasStructure(structure: object): Ensurer<T>;\n    ensure(func: (arg: T) => boolean): Ensurer<T>;\n    ensure(func: (arg: T) => boolean, reason: string): Ensurer<T>;\n}  \n\nexport function given<T>(arg: T, argName: string): Ensurer<T>\n{\n    if (argName == null || argName.isEmptyOrWhiteSpace())\n        throw new ArgumentNullException(\"argName\");\n    \n    return new EnsurerInternal(arg, argName);\n}\n\nclass EnsurerInternal<T> implements Ensurer<T>\n{\n    private _arg: T;\n    private _argName: string;\n\n\n    constructor(arg: T, argName: string)\n    {\n        this._arg = arg;\n        this._argName = argName;\n    }\n\n    public ensureHasValue(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            throw new ArgumentNullException(this._argName);\n\n        return this;\n    }\n    \n    public ensureIsString(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n        \n        if (typeof (this._arg) !== \"string\")\n            throw new ArgumentException(this._argName, \"must be string\");\n        \n        return this;\n    }\n    \n    public ensureIsNumber(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"number\")\n            throw new ArgumentException(this._argName, \"must be number\");\n\n        return this;\n    }\n    \n    public ensureIsBoolean(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"boolean\")\n            throw new ArgumentException(this._argName, \"must be boolean\");\n\n        return this;\n    }\n    \n    public ensureIsObject(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"object\")\n            throw new ArgumentException(this._argName, \"must be object\");\n\n        return this;\n    }\n    \n    public ensureIsFunction(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"function\")\n            throw new ArgumentException(this._argName, \"must be function\");\n\n        return this;\n    }\n    \n    public ensureIsArray(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (!Array.isArray(this._arg))\n            throw new ArgumentException(this._argName, \"must be array\");\n\n        return this;\n    }\n    \n    public ensureIsType(type: Function): Ensurer<T>\n    {\n        if (type === null || type === undefined)\n            throw new ArgumentNullException(\"type\");\n        \n        if (this._arg == null || this._arg === undefined)\n            return this;\n        \n        if (!(this._arg instanceof type))\n            throw new ArgumentException(this._argName, `must be ${(<Object>type).getTypeName()}`);\n        \n        return this;\n    }\n    \n    public ensureHasStructure(structure: object): Ensurer<T>\n    {\n        if (structure === null || structure === undefined)\n            throw new ArgumentNullException(\"structure\");\n        \n        if (this._arg == null || this._arg === undefined)\n            return this;\n        \n        this.ensureHasStructureInternal(this._arg, structure);\n           \n        return this;\n    }\n    \n    private ensureHasStructureInternal(arg: any, schema: any, parentName?: string)\n    {\n        for (let key in schema)\n        {\n            let isOptional = key.endsWith(\"?\");\n            let name = isOptional ? key.substring(0, key.length - 1) : key;\n            if (name.isEmptyOrWhiteSpace())\n                throw new ArgumentException(\"structure\", `invalid key specification '${key}'`);\n            let fullName = parentName ? `${parentName}.${name}` : name;\n            \n            const typeInfo = schema[key];\n            const typeName = this.getTypeNameInternal(typeInfo, fullName);\n            \n            const value = arg[name];\n            if (value === null || value === undefined)\n            {\n                if (isOptional)\n                    continue;\n\n                throw new ArgumentException(this._argName, `is missing required property '${fullName}' of type '${typeName}'`);\n            }\n            \n            this.ensureHasTypeInternal(typeName, typeInfo, fullName, value);\n        } \n    }\n    \n    private getTypeNameInternal(typeInfo: any, fullName: string): string\n    {\n        let types = [\"string\", \"boolean\", \"number\", \"object\", \"array\"];\n        \n        if (typeInfo === null || typeInfo === undefined)\n            throw new ArgumentException(\"structure\", `null type specification for key '${fullName}'`);\n\n        if (typeof (typeInfo) !== \"string\" && typeof (typeInfo) !== \"object\")\n            throw new ArgumentException(\"structure\", `invalid type specification '${typeInfo}' for key '${fullName}'`);\n\n        const typeName = typeof (typeInfo) === \"string\" ? typeInfo.trim().toLowerCase() : Array.isArray(typeInfo) ? \"array\" : \"object\";\n        if (types.every(t => t !== typeName))\n            throw new ArgumentException(\"structure\", `invalid type specification '${typeInfo}' for key '${fullName}'`);\n        \n        return typeName;\n    }\n    \n    private ensureHasTypeInternal(typeName: string, typeInfo: any, fullName: string, value: any): void\n    {\n        if (typeName === \"object\")\n        {\n            if (typeof (typeInfo) !== \"string\")\n            {\n                this.ensureHasStructureInternal(value, typeInfo, fullName);\n            }\n            else\n            {\n                if (typeof (value) !== typeName)\n                    throw new ArgumentException(this._argName,\n                        `invalid value of type '${typeof (value)}' for property '${fullName}' of type '${typeName}'`);\n            }\n        }\n        else if (typeName === \"array\")\n        {\n            if (!Array.isArray(value))\n                throw new ArgumentException(this._argName,\n                    `invalid value of type '${typeof (value)}' for property '${fullName}' of type '${typeName}'`);\n\n            if (typeof (typeInfo) !== \"string\")\n            {\n                const typeInfoArray = typeInfo as Array<any>;\n                if (typeInfoArray.length > 0)\n                {\n                    const arrayTypeInfo = typeInfoArray[0];\n                    const arrayTypeName = this.getTypeNameInternal(arrayTypeInfo, fullName);\n\n                    (<Array<any>>value).forEach(t => this.ensureHasTypeInternal(arrayTypeName, arrayTypeInfo, fullName, t));\n                }\n            }\n        }\n        else\n        {\n            if (typeof (value) !== typeName)\n                throw new ArgumentException(this._argName,\n                    `invalid value of type '${typeof (value)}' for property '${fullName}' of type '${typeName}'`);\n        }\n    }\n\n    public ensure(func: (arg: T) => boolean): Ensurer<T>;   \n    public ensure(func: (arg: T) => boolean, reason: string): Ensurer<T>;\n    public ensure(func: (arg: T) => boolean, reason?: string): Ensurer<T>\n    {\n        if (func === null || func === undefined)\n            throw new ArgumentNullException(\"func\");    \n        \n        if (this._arg == null || this._arg === undefined)\n            return this;\n        \n        if (!func(this._arg))\n        {\n            if (reason != null && !reason.isEmptyOrWhiteSpace())\n                throw new ArgumentException(this._argName, reason.trim());\n\n            throw new InvalidArgumentException(this._argName);\n        }\n\n        return this;\n    }\n}"]}