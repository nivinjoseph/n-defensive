{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import \"n-ext\";\nimport  \n{\n    ArgumentException,\n    ArgumentNullException,\n    InvalidArgumentException,\n} from \"n-exception\";\n\nexport interface Ensurer<T>\n{\n    ensureHasValue(): Ensurer<T>;\n    ensureIsString(): Ensurer<T>;\n    ensureIsNumber(): Ensurer<T>;\n    ensureIsBoolean(): Ensurer<T>;\n    ensureIsObject(): Ensurer<T>;\n    ensureIsFunction(): Ensurer<T>;\n    ensureIsArray(): Ensurer<T>;\n    ensureIsType(type: Function): Ensurer<T>;\n    ensure(func: (arg: T) => boolean): Ensurer<T>;\n    ensure(func: (arg: T) => boolean, reason: string): Ensurer<T>;\n}  \n\nexport function given<T>(arg: T, argName: string): Ensurer<T>\n{\n    if (argName == null || argName.isEmptyOrWhiteSpace())\n        throw new ArgumentNullException(\"argName\");\n    \n    return new EnsurerInternal(arg, argName);\n}\n\nclass EnsurerInternal<T> implements Ensurer<T>\n{\n    private _arg: T;\n    private _argName: string;\n\n\n    constructor(arg: T, argName: string)\n    {\n        this._arg = arg;\n        this._argName = argName;\n    }\n\n    public ensureHasValue(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            throw new ArgumentNullException(this._argName);\n\n        return this;\n    }\n    \n    public ensureIsString(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n        \n        if (typeof (this._arg) !== \"string\")\n            throw new ArgumentException(this._argName, \"must be string\");\n        \n        return this;\n    }\n    \n    public ensureIsNumber(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"number\")\n            throw new ArgumentException(this._argName, \"must be number\");\n\n        return this;\n    }\n    \n    public ensureIsBoolean(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"boolean\")\n            throw new ArgumentException(this._argName, \"must be boolean\");\n\n        return this;\n    }\n    \n    public ensureIsObject(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"object\")\n            throw new ArgumentException(this._argName, \"must be object\");\n\n        return this;\n    }\n    \n    public ensureIsFunction(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (typeof (this._arg) !== \"function\")\n            throw new ArgumentException(this._argName, \"must be function\");\n\n        return this;\n    }\n    \n    public ensureIsArray(): Ensurer<T>\n    {\n        if (this._arg === null || this._arg === undefined)\n            return this;\n\n        if (!Array.isArray(this._arg))\n            throw new ArgumentException(this._argName, \"must be array\");\n\n        return this;\n    }\n    \n    public ensureIsType(type: Function): Ensurer<T>\n    {\n        if (type === null || type === undefined)\n            throw new ArgumentNullException(\"type\");\n        \n        if (this._arg == null || this._arg === undefined)\n            return this;\n        \n        if (!(this._arg instanceof type))\n            throw new ArgumentException(this._argName, `must be ${(<Object>type).getTypeName()}`);\n        \n        return this;\n    }\n\n    public ensure(func: (arg: T) => boolean): Ensurer<T>;   \n    public ensure(func: (arg: T) => boolean, reason: string): Ensurer<T>;\n    public ensure(func: (arg: T) => boolean, reason?: string): Ensurer<T>\n    {\n        if (func === null || func === undefined)\n            throw new ArgumentNullException(\"func\");    \n        \n        if (!func(this._arg))\n        {\n            if (reason != null && !reason.isEmptyOrWhiteSpace())\n                throw new ArgumentException(this._argName, reason.trim());\n\n            throw new InvalidArgumentException(this._argName);\n        }\n\n        return this;\n    }\n}"]}